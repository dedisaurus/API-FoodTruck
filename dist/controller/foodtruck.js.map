{"version":3,"sources":["../../src/controller/foodtruck.js"],"names":["config","db","api","post","authenticate","req","res","newfoodTruck","Foodtruck","name","body","foodtype","avgcost","geometry","coordinates","save","err","send","json","message","get","find","foodtruck","findById","params","id","put","delete","remove","_id","newReview","Review","title","text","review","reviews","push"],"mappings":"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","file":"foodtruck.js","sourcesContent":["import mongoose from 'mongoose';\r\nimport { Router}  from 'express';\r\nimport Foodtruck from '../model/foodtruck';\r\nimport Review from '../model/review';\r\n\r\nimport {\r\n    authenticate\r\n} from \"../middleware/authMiddleware\";\r\n\r\nexport default ({\r\n    config,\r\n    db\r\n}) => {\r\n    let api = Router();\r\n\r\n    //CRUD = CREATE READ UPDATE DELETE\r\n\r\n    //'/v1/Foodtruck/add' ==> Create\r\n    api.post('/add', authenticate, (req, res) => {\r\n        let newfoodTruck = new Foodtruck();\r\n        newfoodTruck.name = req.body.name;\r\n        newfoodTruck.foodtype = req.body.foodtype;\r\n        newfoodTruck.avgcost = req.body.avgcost;\r\n        newfoodTruck.geometry.coordinates = req.body.geometry.coordinates;\r\n\r\n        newfoodTruck.save(err => {\r\n            if (err) {\r\n                res.send(err);\r\n            }\r\n            res.json({\r\n                message: 'Foodtruck saved successfully'\r\n            });\r\n        });\r\n    });\r\n\r\n    //'v1/Foodtruck/' ==> Read\r\n    api.get('/', authenticate, (req, res) => {\r\n\r\n        Foodtruck.find({}, (err, foodtruck) => {\r\n            if (err) {\r\n                res.send(err);\r\n            }\r\n            res.json(foodtruck);\r\n        });\r\n    });\r\n\r\n    //''v1/foodtruck/:id' ==> read w/param\r\n    api.get('/:id', (req, res) => {\r\n        Foodtruck.findById(req.params.id, (err, foodtruck) => {\r\n            if (err) {\r\n                res.send(err);\r\n            }\r\n            res.json(foodtruck);\r\n        });\r\n    });\r\n\r\n    //'v1/foodtruck/:id' => update\r\n    api.put('/:id', (req, res) => {\r\n        Foodtruck.findById(req.params.id, (err, foodtruck) => {\r\n            if (err) {\r\n                res.send(err);\r\n            }\r\n            foodtruck.name = req.body.name;\r\n            foodtruck.save(err => {\r\n                if (err) {\r\n                    res.send(err);\r\n                }\r\n                res.json({\r\n                    message: \"foodtruck data has been update\"\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    //'v1/foodtruck/:id' => delete\r\n    api.delete('/:id', (req, res) => {\r\n        Foodtruck.remove({\r\n            _id: req.params.id\r\n        }, (err, foodtruck) => {\r\n            if (err) {\r\n                res.send(err);\r\n            }\r\n            res.json({\r\n                message: \"foodtruck succesfully remove\"\r\n            });\r\n        });\r\n    });\r\n\r\n    //add review for specific foodtruck id\r\n    //'/v1/foodtruck/reviews/add/:id'\r\n    api.post('/reviews/add/:id', (req, res) => {\r\n        Foodtruck.findById(req.params.id, (err, foodtruck) => {\r\n            if (err) {\r\n                res.send(err);\r\n            }\r\n            let newReview = new Review();\r\n\r\n            newReview.title = req.body.title;\r\n            newReview.text = req.body.text;\r\n            newReview.foodtruck = foodtruck._id;\r\n            newReview.save((err, review) => {\r\n                if (err) {\r\n                    res.send(err);\r\n                }\r\n                foodtruck.reviews.push(newReview);\r\n                foodtruck.save(err => {\r\n                    if (err) {\r\n                        res.send(err);\r\n                    }\r\n                    res.json({\r\n                        message: \"reviews succcessfully saved\"\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    });\r\n\r\n    //get reviews for a specific food truck id\r\n    // '/v1/foodtruck/reviews/:id'\r\n    api.get('/reviews/:id', (req, res) => {\r\n        Review.find({\r\n            foodtruck: req.params.id\r\n        }, (err, review) => {\r\n            if (err) {\r\n                res.send(err);\r\n            }\r\n            res.json(review);\r\n        });\r\n    });\r\n\r\n    return api;\r\n};"]}